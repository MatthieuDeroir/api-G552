const assert = require('assert');
const Frame_0x62_PlayerNames = require('../../Data/Frame/Frame_0x62_HomePlayerNames');
require('jest')

describe('Frame_0x62_PlayerNames', () => {

    const expectedResult = {
        insertType: 'eGameStateInsertType.DirectConsoleData',
        Home_PlayerName: new Array(16),
        Home_PlayerNumber: new Array(16),
    };

    test('Number 12 [0x53, 0x62, 0x30, 0x4D, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x57, 0x00, 0x4F, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00];', () => {
        const message = [
            0xF8, //Start byte
            0x62, // Sport definition
            0x30, // Player Index
            0x4D, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00,
            0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00,
            0x41, 0x00, 0x57, 0x00, 0x4F, 0x00, 0x58, 0x00, // Player name, each character is 2 bytes
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Reserved
            0x31, 0x32, // Player number
            0x0D // End byte
        ];

        expectedResult.Home_PlayerName[0] = 'MAAAAAAAAWOX';
        expectedResult.Home_PlayerNumber[0] = 12;

        const result = Frame_0x62_PlayerNames.build(message);

        assert.deepStrictEqual(result, expectedResult);
    });

    test('Number 00 [0x53, 0x62, 0x30, 0x4D, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x57, 0x00, 0x4F, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00];', () => {
        const message = [0xF8, 0x62, 0x30, 0x4D, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41,
            0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x57,
            0x00, 0x4F, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00];

        expectedResult.Home_PlayerName[0] = 'MAAAAAAAAWOX';
        expectedResult.Home_PlayerNumber[0] = -3;

        const result = Frame_0x62_PlayerNames.build(message);

        assert.deepStrictEqual(result, expectedResult);
    });


    test('Number 99 [0x53, 0x62, 0x30, 0x4D, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x57, 0x00, 0x4F, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00];', () => {
        const message = [0xF8, 0x62, 0x30, 0x4D, 0x00, 0x41, 0x00, 0x41,
            0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41, 0x00, 0x41,
            0x00, 0x41, 0x00, 0x57, 0x00, 0x4F, 0x00, 0x58, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x39, 0x39, 0x00];


        expectedResult.Home_PlayerName[0] = 'MAAAAAAAAWOX';
        expectedResult.Home_PlayerNumber[0] = 99;

        const result = Frame_0x62_PlayerNames.build(message);

        assert.deepStrictEqual(result, expectedResult);
    });
});
